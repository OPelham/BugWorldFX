1st make mock up of UI design include screen and button somewhere out of the way to run (perhaps to stop, pause, or reset too?)

initial screen with selection of new game or view past world metrics

3 scenes in total (potentially a forth on selection of terminaltion which shows metrics from that simulation)

Scenes
	-opening menu screen
		-simulation screen
			-End of simulation summary screen
		-past metrics screen
		
		
Issue getting bugs to find food, moving too quickly or only wanting one bug to go for
	- had to ensure only moved once if food found not once for every check
	
	bugs
	0-4 hungerlevel
	of <2 search for food
	1 in 5 chance of reducing hunger per update
	when eating sets hunger to 4
	
	plants
	0-5 growth
	one in 10 change of growth per update
	when eaten from reduces size by one
	
	if either = 0 then dies - visibility is 0 no regrowth for trees
	(is there a way to remove?)
	when interacting with objects do check for vissibility first
	
	group would allow for easy remove and set opacity
	group.getchildren would give a list that could iterate over...
	
	issues with bug spawninng under rock or plant or plant growing over
	need to eventually add collision detection to for use in constructor
	untill then changed order for the bug which does have collis detect?
	
	add breeding
	
	public void methodname(numField fieldname, Text textname)
	if(inputCheck(fieldname.getText()) <0) { //if input check method returns -1 then is not valid
					textname.setText("Prey bugs: Please Enter a positive integer 0-100");
					textname.setFill(Color.RED);
					valid = false;	//to stop change to next scene
				} else {
					textname.setText("Number of prey bugs");
					textname.setFill(Color.BLACK);
					numPreyBug = inputCheck(fieldname.getText());	//add outputs to field numPreyBug for use in populate world method
				}
	
	
	public void generateobjects<t extends WorldObject>(int numOfObject, Scene scene,ImagePattern fill) 
	for (int i = 0; i < numOfObstacle; i++) {	//adds number given by user in startup screen
			final Obstacle obstacleToAdd = new Obstacle(simulationScene);
			obstacleToAdd.setFill(obstacleFill);	// adds image fill
			allObjectList.add(obstacleToAdd);
			simulationSection.getChildren().add(obstacleToAdd);		//adds node so will be displayed
		}
		
		
		
		
		
		
		
	